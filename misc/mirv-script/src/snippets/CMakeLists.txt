cmake_minimum_required (VERSION 3.24)

project ("AfxHookSource2Snippets")

set(AFXHOOKSOURCE2SNIPPETS_NAMES
    mirv_script_aim
    mirv_script_fov
    mirv_script_point
    mirv_script_voice
    observer-test
    attachment-test
    quit-when-demo-is-paused
)

list(TRANSFORM AFXHOOKSOURCE2SNIPPETS_NAMES APPEND ".ts" OUTPUT_VARIABLE AFXHOOKSOURCE2SNIPPETS_INPUTS)
list(TRANSFORM AFXHOOKSOURCE2SNIPPETS_INPUTS PREPEND "\"src/snippets/" OUTPUT_VARIABLE AFXHOOKSOURCE2SNIPPETS_TSC_INPUTS)
list(TRANSFORM AFXHOOKSOURCE2SNIPPETS_TSC_INPUTS APPEND "\"")
list(JOIN AFXHOOKSOURCE2SNIPPETS_TSC_INPUTS "," AFXHOOKSOURCE2SNIPPETS_TSC_INPUTS)
list(TRANSFORM AFXHOOKSOURCE2SNIPPETS_INPUTS PREPEND "${AfxHookSource2Snippets_SOURCE_DIR}/" OUTPUT_VARIABLE AFXHOOKSOURCE2SNIPPETS_INPUTS)

file(WRITE "${AfxHookSource2Snippets_SOURCE_DIR}/../../tsconfig.snippets.autogenerated.json" "{
	\"extends\": \"./tsconfig.json\",
	\"compilerOptions\": {
		\"outDir\": \"${AfxHookSource2Snippets_BINARY_DIR}/dist\",
		\"noEmit\": false,
	},
	\"include\": [\"src/types/*\"],
	\"files\": [${AFXHOOKSOURCE2SNIPPETS_TSC_INPUTS}]
}")


list(TRANSFORM AFXHOOKSOURCE2SNIPPETS_NAMES APPEND ".js" OUTPUT_VARIABLE AFXHOOKSOURCE2SNIPPETS_OUTPUTS)
list(TRANSFORM AFXHOOKSOURCE2SNIPPETS_OUTPUTS PREPEND "${AfxHookSource2Snippets_BINARY_DIR}/dist/")

SET(AFXHOOKSOURCE2SNIPPETS_OUTPUTS ${AFXHOOKSOURCE2SNIPPETS_OUTPUTS} PARENT_SCOPE)

add_custom_command(
    OUTPUT "${AfxHookSource2Snippets_SOURCE_DIR}/../../package-lock.json"
    COMMAND npm install
    DEPENDS "${AfxHookSource2Snippets_SOURCE_DIR}/../../package.json"
    WORKING_DIRECTORY "${AfxHookSource2Snippets_SOURCE_DIR}/../../"
    VERBATIM
)

add_custom_target(
    AfxHookSource2SnippetsNpmInstall
    DEPENDS "${AfxHookSource2Snippets_SOURCE_DIR}/../../package-lock.json"
)

add_custom_command(
    OUTPUT ${AFXHOOKSOURCE2SNIPPETS_OUTPUTS}
    COMMAND npm run tsc -- --project tsconfig.snippets.autogenerated.json
    DEPENDS AfxHookSource2SnippetsNpmInstall ${AFXHOOKSOURCE2SNIPPETS_INPUTS}
    WORKING_DIRECTORY "${AfxHookSource2Snippets_SOURCE_DIR}/../../"
    VERBATIM
)

add_custom_target(AfxHookSource2Snippets
    DEPENDS ${AFXHOOKSOURCE2SNIPPETS_OUTPUTS}    
)
